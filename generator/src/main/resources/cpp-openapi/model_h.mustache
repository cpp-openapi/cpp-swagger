{{#models}}{{#model}}/*
 * {{classname}}.h
 *
 * {{description}}
 */

#pragma once

{{/model}}{{/models}}
#include <string>
#include <optional>
#include "model_common.h"
{{#imports}}
{{{import}}}
{{/imports}}

namespace openapi {
{{#models}}{{#model}}

/*! \brief {{{description}}}
 *
 *  \ingroup Models
 *
 */

struct {{classname}}{
    {{#vars}}
    {{^isContainer}}
    {{#isPrimitiveType}}
    std::optional<{{dataType}}> {{name}}{};
    {{/isPrimitiveType}}
    {{^isPrimitiveType}}
    std::optional<{{dataType}}> {{name}};
    {{/isPrimitiveType}}
    {{/isContainer}}
    {{#isContainer}}
        {{#isMap}}
    // additional properties should be rendered as json. string for now.
    {{dataType}} {{name}};
        {{/isMap}}
        {{^isMap}}
    // array
    {{dataType}}<{{#items}}{{dataType}}{{/items}}> {{name}};
        {{/isMap}}
    {{/isContainer}}
	{{/vars}}
    OPENAPI_JSON_CONVERT_FUNCS_DECLARE
};
{{/model}}
{{/models}}
}