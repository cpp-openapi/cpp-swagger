file(GLOB SOURCES
    *.h
    *.cpp
)

# filter out tests
list(FILTER SOURCES EXCLUDE REGEX .*_test\\.cpp)

add_library({{#appName}}{{#lambda.camelcase}}{{appName}}{{/lambda.camelcase}}{{/appName}}_model
    STATIC ${SOURCES}
)

target_include_directories({{#appName}}{{#lambda.camelcase}}{{appName}}{{/lambda.camelcase}}{{/appName}}_model
    PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}
)

target_link_libraries({{#lambda.camelcase}}{{appName}}{{/lambda.camelcase}}_model
    PUBLIC {{#lambda.camelcase}}{{appName}}{{/lambda.camelcase}}_common
)

# testing
file(GLOB TEST_SOURCES
    *_test.cpp
)

#foreach(test_file ${TEST_SOURCES})
#    get_filename_component(test_name ${test_file} NAME_WE)
#    add_executable(${test_name} ${test_file})
#    
#    target_link_libraries(${test_name} PRIVATE gtest_main {{#appName}}{{#lambda.camelcase}}{{appName}}{{/lambda.camelcase}}{{/appName}}_model)
#
#    add_test(NAME ${test_name} COMMAND ${test_name} WORKING_DIRECTORY ${CMAKE_BINARY_DIR})
#endforeach()

add_executable({{#lambda.camelcase}}{{appName}}{{/lambda.camelcase}}_model_test ${TEST_SOURCES})
target_link_libraries({{#lambda.camelcase}}{{appName}}{{/lambda.camelcase}}_model_test PRIVATE gtest_main {{#lambda.camelcase}}{{appName}}{{/lambda.camelcase}}_model)
add_test(NAME {{#lambda.camelcase}}{{appName}}{{/lambda.camelcase}}_model_test COMMAND {{#lambda.camelcase}}{{appName}}{{/lambda.camelcase}}_model_test WORKING_DIRECTORY ${CMAKE_BINARY_DIR})